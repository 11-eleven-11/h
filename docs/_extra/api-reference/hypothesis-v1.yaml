openapi: 3.0.0
# -----------------------------------------------------------------------------
# API metadata
# -----------------------------------------------------------------------------
info:
  title: Hypothesis API
  version: 1.0.0
  termsOfService: https://hypothes.is/terms-of-service
  license:
    name: BSD (2-Clause)
    url: https://github.com/hypothesis/h/blob/master/LICENSE
servers:
  - url: https://api.hypothes.is/api

# -----------------------------------------------------------------------------
# Reusable tags for grouping operations
# -----------------------------------------------------------------------------
tags:
  - name: general
  - name: annotations
  - name: groups
  - name: users

# -----------------------------------------------------------------------------
# Reusable components
# -----------------------------------------------------------------------------
components:

  # -------------------------
  # Resusable parameters
  # -------------------------
  parameters:
    GroupID:
      name: id
      in: path
      required: true
      schema:
        description: >
          Either an 8-character alphanumeric unique identifier generated by the service
          or an authority-provided identifier
        oneOf:
          - type: string
            description: A short string: the group ID assigned by the service
            example: 4j7Dko3R
          - type: string
            pattern: "group:[a-zA-Z0-9._\\-+!~*()']{1,1024}@.*$"
            description: Unique identifier assigned by the group's owning authority
            example: "group:338facc93@myauthority.net"
    GroupExpand:
      name: expand
      in: query
      required: false
      description: >
        One or more relations to expand for the group resource
      schema:
        type: array
        items:
          type: string
          enum:
            - organization
            - scopes

  # --------------------------
  # Resusable security schemes
  # --------------------------
  securitySchemes:

    AuthClient:
      type: http
      scheme: basic
      description: >
        An AuthClient is a special registered set of credentials associated with a
        particular "authority", (typically formatted as a domain, e.g. `myauthority.com`).
        Requests authenticated in this manner allow the retrieval and manipulation
        of resources (e.g. users, groups) across an entire authority, not just for
        a single authenticated user.

        These credentials must be pre-registered with the service provider.

    ApiKey:
      type: http
      scheme: bearer
      description: >
        An API key corresponds to a single user. Requests authenticated in this
        manner may retrieve and manipulate resources based on the authorization
        of the associated user.

  # ------------------------------
  # Resusable resource schemas
  # ------------------------------
  schemas:
    Group:
      $ref: './schemas/group.yaml#/Group'


# -----------------------------------------------------------------------------
# API operations
# -----------------------------------------------------------------------------
paths:
  /groups/{id}:
    get:
      tags:
        - groups
      summary: Fetch a Group
      description: >
        Fetch a single Group resource.
      security:
        - AuthClient: []
        - ApiKey: []
        - {} # Unauthenticated OK
      parameters:
        - $ref: '#/components/parameters/GroupID'
        - $ref: '#/components/parameters/GroupExpand'

      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        '404':
          description: The specified resource was not found, or you do not have permission to access it
